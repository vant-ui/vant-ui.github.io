"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1348"],{95579:function(s,n,a){a.r(n);var t=a("38061");let l=["innerHTML"];n.default={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>Cascader</h1>\n<div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3>\n<p>The cascader component is used for the selection of multi-level data. The typical scene is the selection of provinces and cities.</p>\n</div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3>\n<p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce" target="_blank">Component Registration</a> for more registration ways.</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cascader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cascader</span>);\n</code></pre>\n</div><h2 id="usage" tabindex="-1">Usage</h2>\n<div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Area&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Zhejiang&#x27;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Jiangsu&#x27;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n      },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>\n  @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="async-options" tabindex="-1">Async Options</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Area&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { closeToast, showLoadingToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> options = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Zhejiang&#x27;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n        <span class="hljs-attr">children</span>: [],\n      },\n    ]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">{ value }</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (\n        value === options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">value</span> &amp;&amp;\n        options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>\n      ) {\n        <span class="hljs-title function_">showLoadingToast</span>(<span class="hljs-string">&#x27;Loading...&#x27;</span>);\n        <span class="hljs-comment">// mock data request</span>\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span> = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330100&#x27;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ningbo&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;330200&#x27;</span> },\n          ];\n          <span class="hljs-title function_">closeToast</span>();\n        }, <span class="hljs-number">1000</span>);\n      }\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="custom-field-names" tabindex="-1">Custom Field Names</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">:field-names</span>=<span class="hljs-string">&quot;fieldNames&quot;</span>\n/&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> fieldNames = {\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;name&#x27;</span>,\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;code&#x27;</span>,\n      <span class="hljs-attr">children</span>: <span class="hljs-string">&#x27;items&#x27;</span>,\n    };\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Zhejiang&#x27;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jiangsu&#x27;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      code,\n      options,\n      fieldNames,\n    };\n  },\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">options-top</span>=<span class="hljs-string">&quot;{ tabIndex }&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current-level&quot;</span>&gt;</span>Current level is {{ tabIndex + 1 }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cascader</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.current-level</span> {\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span> <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--van-gray-<span class="hljs-number">6</span>);\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Zhejiang&#x27;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330000&#x27;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Hangzhou&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;330100&#x27;</span> }],\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jiangsu&#x27;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320000&#x27;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Nanjing&#x27;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;320100&#x27;</span> }],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      code,\n      options,\n    };\n  },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>Value of selected option</td>\n<td><em>string | number</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>Title</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>Options</td>\n<td><em>CascaderOption[]</em></td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>Placeholder of unselected tab</td>\n<td><em>string</em></td>\n<td><code>Select</code></td>\n</tr>\n<tr>\n<td>active-color</td>\n<td>Active color</td>\n<td><em>string</em></td>\n<td><code>#1989fa</code></td>\n</tr>\n<tr>\n<td>swipeable</td>\n<td>Whether to enable gestures to slide left and right</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>closeable</td>\n<td>Whether to show close icon</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>show-header</td>\n<td>Whether to show header</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>close-icon</td>\n<td>Close icon name</td>\n<td><em>string</em></td>\n<td><code>cross</code></td>\n</tr>\n<tr>\n<td>field-names</td>\n<td>Custom the fields of options</td>\n<td><em>CascaderFieldNames</em></td>\n<td><code>{ text: \'text\', value: \'value\', children: \'children\' }</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="data-structure-of-cascaderoption" tabindex="-1">Data Structure of CascaderOption</h3>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>Option text</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>value</td>\n<td>Option value</td>\n<td><em>string | number</em></td>\n</tr>\n<tr>\n<td>color</td>\n<td>Text color</td>\n<td><em>string</em></td>\n</tr>\n<tr>\n<td>children</td>\n<td>Cascade children</td>\n<td><em>CascaderOption[]</em></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>Whether to disable option</td>\n<td><em>boolean</em></td>\n</tr>\n<tr>\n<td>className</td>\n<td>className for the option</td>\n<td><em>string | Array | object</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n<th>Arguments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>change</td>\n<td>Emitted when active option changed</td>\n<td><em>{ value: string | number, selectedOptions: CascaderOption[], tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>finish</td>\n<td>Emitted when all options is selected</td>\n<td><em>{ value: string | number, selectedOptions: CascaderOption[], tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>close</td>\n<td>Emitted when the close icon is clicked</td>\n<td>-</td>\n</tr>\n<tr>\n<td>click-tab</td>\n<td>Emitted when a tab is clicked</td>\n<td><em>activeTab: number, title: string</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>SlotProps</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>Custom title</td>\n<td>-</td>\n</tr>\n<tr>\n<td>option</td>\n<td>Custom option text</td>\n<td><em>{ option: CascaderOption, selected: boolean }</em></td>\n</tr>\n<tr>\n<td>options-top</td>\n<td>Custom the content above the options</td>\n<td><em>{ tabIndex: number }</em></td>\n</tr>\n<tr>\n<td>options-bottom</td>\n<td>Custom the content below the options</td>\n<td><em>{ tabIndex: number }</em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3>\n<p>The component exports the following type definitions:</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CascaderProps</span>, <span class="hljs-title class_">CascaderOption</span>, <span class="hljs-title class_">CascaderFieldNames</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n</code></pre>\n</div><h2 id="theming" tabindex="-1">Theming</h2>\n<div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3>\n<p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider" target="_blank">ConfigProvider component</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Default Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--van-cascader-header-height</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-header-padding</td>\n<td><em>0 var(--van-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-title-font-size</td>\n<td><em>var(--van-font-size-lg)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-title-line-height</td>\n<td><em>20px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-close-icon-size</td>\n<td><em>22px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-close-icon-color</td>\n<td><em>var(--van-gray-5)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-selected-icon-size</td>\n<td><em>18px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-tabs-height</td>\n<td><em>48px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-active-color</td>\n<td><em>var(--van-danger-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-options-height</td>\n<td><em>384px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-tab-color</td>\n<td><em>var(--van-text-color)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-cascader-unselected-tab-color</td>\n<td><em>var(--van-text-color-2)</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);