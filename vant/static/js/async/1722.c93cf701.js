"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1722"],{82726:function(s,a,n){n.r(a);var t=n("38061");let l=["innerHTML"];a.default={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>Barrage</h1>\n<div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3>\n<p>To realize the critical subtitle function when watching the video. Please upgrade <code>vant</code> to &gt;= v4.4.0 before using this component.</p>\n</div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3>\n<p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce" target="_blank">Component Registration</a> for more registration ways.</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Barrage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Barrage</span>);\n</code></pre>\n</div><h2 id="usage" tabindex="-1">Usage</h2>\n<div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-barrage</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-barrage</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-space</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 10px&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span> barrage <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-space</span>&gt;</span>\n</code></pre>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> defaultList = [\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Lightweight&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">101</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Customizable&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">102</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">103</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Vue&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">104</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Library&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">105</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;VantUI&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">106</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;666&#x27;</span> },\n    ];\n\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([...defaultList]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; {\n      list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>({ <span class="hljs-attr">id</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(), <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Barrage&#x27;</span> });\n    };\n    <span class="hljs-keyword">return</span> { list, add };\n  },\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="imitate-video-barrage" tabindex="-1">Imitate video barrage</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-barrage</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;barrage&quot;</span> <span class="hljs-attr">:auto-play</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-barrage</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-space</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 10px&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;!isPlay&quot;</span>&gt;</span>\n    barrage\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggle()&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>\n    {{ isPlay ? &#x27;pause&#x27; : &#x27;play&#x27; }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-space</span>&gt;</span>\n</code></pre>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> defaultList = [\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">100</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Lightweight&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">101</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Customizable&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">102</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Mobile&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">103</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Vue&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">104</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Library&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">105</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;VantUI&#x27;</span> },\n      { <span class="hljs-attr">id</span>: <span class="hljs-number">106</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;666&#x27;</span> },\n    ];\n\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([...defaultList]);\n    <span class="hljs-keyword">const</span> barrage = ref&lt;<span class="hljs-title class_">BarrageInstance</span>&gt;();\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; {\n      list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>({ <span class="hljs-attr">id</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>(), <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Barrage&#x27;</span> });\n    };\n\n    <span class="hljs-keyword">const</span> [isPlay, toggle] = <span class="hljs-title function_">useToggle</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-title function_">watch</span>(isPlay, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-keyword">if</span> (isPlay.<span class="hljs-property">value</span>) barrage.<span class="hljs-property">value</span>?.<span class="hljs-title function_">play</span>();\n      <span class="hljs-keyword">else</span> barrage.<span class="hljs-property">value</span>?.<span class="hljs-title function_">pause</span>();\n    });\n\n    <span class="hljs-keyword">return</span> { list, barrage, isPlay, toggle, add };\n  },\n};\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>Barrage data</td>\n<td><em>BarrageItem[]</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>auto-play</td>\n<td>Whether to play the bullet screen automatically</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>rows</td>\n<td>The number of lines of text</td>\n<td><em>number | string</em></td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td>Spacing between the top of the barrage area, unit <code>px</code></td>\n<td><em>number | string</em></td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td>duration</td>\n<td>Text animation duration, unit <code>ms</code></td>\n<td><em>number | string</em></td>\n<td><code>4000</code></td>\n</tr>\n<tr>\n<td>delay</td>\n<td>Barrage animation delay, unit <code>ms</code></td>\n<td><em>number</em></td>\n<td><code>300</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3>\n<p>Use <a href="https://vuejs.org/guide/essentials/template-refs.html" target="_blank">ref</a> to get Barrage instance and call instance methods.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Attribute</th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>play</td>\n<td>Play barrage</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>Pause barrage</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>Default slot</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3>\n<p>The component exports the following type definitions:</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">BarrageProps</span>, <span class="hljs-title class_">BarrageItem</span>, <span class="hljs-title class_">BarrageInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n</code></pre>\n</div><h2 id="theming" tabindex="-1">Theming</h2>\n<div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3>\n<p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider" target="_blank">ConfigProvider component</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Default Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--van-barrage-font-size</td>\n<td><em>16px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-barrage-space</td>\n<td><em>10px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-barrage-color</td>\n<td><em>var(--van-white)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-barrage-font</td>\n<td><em>inherit</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,l))}}}]);