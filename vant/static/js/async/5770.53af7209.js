"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5770"],{12398:function(s,n,t){t.r(n);var a=t("38061");let e=["innerHTML"];n.default={setup:()=>({html:""}),render:()=>((0,a.wg)(),(0,a.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>NoticeBar</h1>\n<div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3>\n<p>Used to display a group of message notifications in a continuons loop.</p>\n</div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3>\n<p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce" target="_blank">Component Registration</a> for more registration ways.</p>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NoticeBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NoticeBar</span>);\n</code></pre>\n</div><h2 id="usage" tabindex="-1">Usage</h2>\n<div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Technology is the common soul of the people who developed it.&quot;</span>\n  <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="scrollable" tabindex="-1">Scrollable</h3>\n<pre><code class="language-html"><span class="hljs-comment">&lt;!-- Enable scroll when text is short --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">scrollable</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Short Content&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Disable scroll when text is long --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Technology is the common soul of the people who developed it.&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="wrapable" tabindex="-1">Wrapable</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">wrapable</span> <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  Technology is the common soul of the people who developed it.\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="mode" tabindex="-1">Mode</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;closeable&quot;</span>&gt;</span>Short Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>Short Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#ecf9ff&quot;</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;info-o&quot;</span>&gt;</span>\n  Short Content\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="vertical-scroll" tabindex="-1">Vertical Scroll</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span> <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span>\n    <span class="hljs-attr">vertical</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;notice-swipe&quot;</span>\n    <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span>\n    <span class="hljs-attr">:touchable</span>=<span class="hljs-string">&quot;false&quot;</span>\n    <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">&quot;false&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.notice-swipe</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mode</td>\n<td>Mode, can be set to <code>closeable</code> <code>link</code></td>\n<td><em>string</em></td>\n<td><code>\'\'</code></td>\n</tr>\n<tr>\n<td>text</td>\n<td>Notice text content</td>\n<td><em>string</em></td>\n<td><code>\'\'</code></td>\n</tr>\n<tr>\n<td>color</td>\n<td>Text color</td>\n<td><em>string</em></td>\n<td><code>#ed6a0c</code></td>\n</tr>\n<tr>\n<td>background</td>\n<td>Background color</td>\n<td><em>string</em></td>\n<td><code>#fffbe8</code></td>\n</tr>\n<tr>\n<td>left-icon</td>\n<td>Left Icon</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>Animation delay (s)</td>\n<td><em>number | string</em></td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td>speed</td>\n<td>Scroll speed (px/s)</td>\n<td><em>number | string</em></td>\n<td><code>60</code></td>\n</tr>\n<tr>\n<td>scrollable</td>\n<td>Whether to scroll content</td>\n<td><em>boolean</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>wrapable</td>\n<td>Whether to enable text wrap</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n<th>Arguments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>click</td>\n<td>Emitted when NoticeBar is clicked</td>\n<td><em>event: MouseEvent</em></td>\n</tr>\n<tr>\n<td>close</td>\n<td>Emitted when NoticeBar is closed</td>\n<td><em>event: MouseEvent</em></td>\n</tr>\n<tr>\n<td>replay</td>\n<td>Emitted when NoticeBar is replayed</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3>\n<p>Use <a href="https://vuejs.org/guide/essentials/template-refs.html" target="_blank">ref</a> to get NoticeBar instance and call instance methods.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Attribute</th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reset</td>\n<td>Reset NoticeBar</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3>\n<p>The component exports the following type definitions:</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarMode</span>, <span class="hljs-title class_">NoticeBarProps</span>, <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n</code></pre>\n<p><code>NoticeBarInstance</code> is the type of component instance:</p>\n<pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n<span class="hljs-keyword">const</span> noticeBarRef = ref&lt;<span class="hljs-title class_">NoticeBarInstance</span>&gt;();\n\nnoticeBarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre>\n</div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>default</td>\n<td>Notice text content</td>\n</tr>\n<tr>\n<td>left-icon</td>\n<td>Custom left icon</td>\n</tr>\n<tr>\n<td>right-icon</td>\n<td>Custom right icon</td>\n</tr>\n</tbody>\n</table>\n</div><h2 id="theming" tabindex="-1">Theming</h2>\n<div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3>\n<p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider" target="_blank">ConfigProvider component</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Default Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--van-notice-bar-height</td>\n<td><em>40px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-padding</td>\n<td><em>0 var(--van-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-wrapable-padding</td>\n<td><em>var(--van-padding-xs) var(--van-padding-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-text-color</td>\n<td><em>var(--van-orange-dark)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-font-size</td>\n<td><em>var(--van-font-size-md)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-line-height</td>\n<td><em>24px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-background</td>\n<td><em>var(--van-orange-light)</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-icon-size</td>\n<td><em>16px</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>--van-notice-bar-icon-min-width</td>\n<td><em>24px</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,e))}}}]);